buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.14.2"
    }
}

version "0.2"
group "org.grails.plugins.kml"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"org.grails.grails-plugin"
apply plugin:"org.grails.grails-plugin-publish"
apply plugin:"asset-pipeline"
apply plugin:"org.grails.grails-gsp"

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-i18n"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:async"
    compile "org.grails.plugins:gsp"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web-plugin"
    provided "org.grails:grails-plugin-services"
    provided "org.grails:grails-plugin-domain-class"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.14.2"

    apply plugin: "org.grails.grails-doc"
    //Does the countries stuff
    compile 'com.neovisionaries:nv-i18n:1.27'
    // https://mvnrepository.com/artifact/com.neovisionaries/nv-i18n
    //compile group: 'com.neovisionaries', name: 'nv-i18n', version: '1.27'



    //This deal with writing/reading KML files
    compile group: 'de.micromata.jak', name: 'JavaAPIforKml', version: '2.2.0'

    //Does the GeoIp stuff
    // https://mvnrepository.com/artifact/com.maxmind.geoip2/geoip2
    //compile group: 'com.maxmind.geoip2', name: 'geoip2', version: '2.12.0'
    // https://mvnrepository.com/artifact/com.maxmind.geoip/geoip-api
    compile group: 'com.maxmind.geoip', name: 'geoip-api', version: '1.3.1'

    //HTTPBuilder
    compile ('org.codehaus.groovy.modules.http-builder:http-builder:0.6') {
        exclude module: 'xalan'
        //exclude module:  'xml-apis'
        exclude module: 'groovy'
    }

    //Commons io
    compile group: 'commons-io', name: 'commons-io', version: '2.4'

}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}
// enable if you wish to package this plugin as a standalone application
bootRepackage.enabled = false
grailsPublish {
    // TODO: Provide values here
    user = 'user'
    key = 'key'
    githubSlug = 'foo/bar'
    license {
        name = 'Apache-2.0'
    }
    title = "My Plugin"
    desc = "Full plugin description"
    developers = [johndoe:"John Doe"]
}


assets {
    packagePlugin = true
}
